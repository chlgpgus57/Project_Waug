<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="reviewMapper">
	<!-- 글쓰기 -->
  	<insert id="reviewWrite" parameterType="ReviewVO" >
  		<selectKey order="BEFORE" resultType="Integer" keyProperty="rv_num">
			select review_SEQ.nextval from dual
		</selectKey>
  		insert into review1 values(#{rv_num}, 1, #{email}, #{rv_writer}, #{rv_contents},
  		sysdate, #{rv_score}, 0, 'aname', sysdate, 'acontents')
  	</insert>
  	
  	<!-- 리뷰파일글쓰기 -->
  	<insert id="review_imgWrite" parameterType="ReviewImgVO">
  		insert into review_img values(review_img_SEQ.nextval, #{rv_num}, #{img_name})
  	</insert>
  	<!-- 전체조회 -->
	<select id="reviewList1" resultType="ReviewVO" parameterType="Pager">
		select * from
		(select R.*, rownum N from
		(select email, rv_num, goods_num, rv_writer, rv_contents, to_char(rv_reg_date, 'yyyy-mm-dd') rv_reg_date
		, rv_score, rv_ex, rv_aname, to_char(rv_adate,'yyyy-mm-dd') rv_adate, rv_acontents from review1 where goods_num = 1
		order by rv_num desc) R)
		where N between #{startRow} and #{lastRow}
	</select>
	
	<resultMap type="ReviewVO" id="reviewFile">
		<id property="rv_num" column="rv_num"/>
		<result property="goods_num" column="goods_num"/>
		<result property="email" column="email"/>
		<result property="rv_writer" column="rv_writer"/>
		<result property="rv_contents" column="rv_contents"/>
		<result property="rv_reg_date" column="rv_reg_date"/>
		<result property="rv_score" column="rv_score"/>
		<result property="rv_ex" column="rv_ex"/>
		<result property="rv_aname" column="rv_aname"/>
		<result property="rv_adate" column="rv_adate"/>
		<result property="rv_acontents" column="rv_acontents"/>
		<collection property="images" javaType="java.util.List" ofType="ReviewImgVO">
			<id property="rv_img_num" column="rv_img_num"/>
			<result property="rv_num" column="rv_num"/>
			<result property="img_name" column="img_name"/>
		</collection>
		
	</resultMap>
	
	<!-- 전체조회테스트 -->
	<select id="reviewList" parameterType="Pager" resultMap="reviewFile">
		select * from
		(select R.*, rownum N from
		(select email, rv_num, goods_num, rv_writer, rv_contents, to_char(rv_reg_date, 'yyyy-mm-dd') rv_reg_date
		, rv_score, rv_ex, rv_aname, to_char(rv_adate,'yyyy-mm-dd') rv_adate, rv_acontents,img_name from review1 full outer join
        review_img
        using(rv_num)
        where goods_num = 1 order by rv_num desc) R)
		where N between #{startRow} and #{lastRow}
	</select>
	
	<!-- 글전체 수 -->
	<select id="reviewCount" resultType="Integer"
		parameterType="Pager">
		select count(rv_num) from review1
		where goods_num = 1

	</select>
	<!-- 글하나 조회 -->
	<select id="reviewSelect" parameterType="ReviewVO" resultType="ReviewVO">
		select * from review1 where rv_num=#{rv_num}
	</select>
	
	<!-- 리뷰삭제 -->
	<delete id="reviewDelete" parameterType="ReviewVO">
		delete review1 where rv_num=#{rv_num}
	</delete>
	
	<!-- 리뷰수정 -->
	<update id="reviewUpdate" parameterType="ReviewVO">
		update review1 set rv_score=#{rv_score}, rv_contents=#{rv_contents} where rv_num= #{rv_num}
	</update>
	
	<!-- 관리자 답변달기 -->
	<update id="reviewReply" parameterType="ReviewVO">
		update review1 set rv_ex=1, rv_aname='ZZAUG 운영자', rv_adate=sysdate, rv_acontents=#{rv_acontents}
		where rv_num=#{rv_num}
	</update>
	
	<!-- 별점평균, 전체리뷰수 가져오기 -->
	<select id="review_avg_count" parameterType="ReviewVO" resultType="ReviewVO">
		select round(avg(rv_score),1) rv_avg, count(rv_num) rv_total from review1 where goods_num=1
	</select>
	
	<!-- 가장 최근 후기 불러오기 -->
	<select id="reviewLatest" parameterType="ReviewVO" resultType="ReviewVO">
		select * from        
(select rv_writer, rv_contents, to_char(rv_reg_date, 'yyyy-mm-dd') rv_reg_date
		, rv_score from review1 where goods_num = 1
		order by rv_num desc) R where rownum=1
	</select>
</mapper>